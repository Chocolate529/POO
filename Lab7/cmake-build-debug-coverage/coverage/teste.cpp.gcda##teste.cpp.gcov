        -:    0:Source:C:/Users/lupse/CLionProjects/POO/Lab7/teste.cpp
        -:    0:Graph:C:\Users\lupse\CLionProjects\POO\Lab7\cmake-build-debug-coverage\CMakeFiles\Lab6.dir\teste.cpp.gcno
        -:    0:Data:C:\Users\lupse\CLionProjects\POO\Lab7\cmake-build-debug-coverage\CMakeFiles\Lab6.dir\teste.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by lupse on 4/8/2025.
        -:    3://
        -:    4:#include "teste.h"
        -:    5:#include "list.h"
        -:    6:#include <iostream>
        -:    7:#include <vector>
        -:    8:
        -:    9:// ------------------ Test pentru Domain ------------------
        -:   10:
function _ZN5Teste10testMasinaEv called 1 returned 100% blocks executed 58%
        1:   11:void Teste::testMasina() {
        1:   11-block  0
        7:   12:    Masina m("B123XYZ", "Toyota", "Corolla", "Sedan");
        1:   12-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   12-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   12-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   12-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   12-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   12-block  5
call   15 returned 1
        1:   12-block  6
call   16 returned 1
        1:   12-block  7
call   17 returned 1
        1:   12-block  8
call   18 returned 1
    $$$$$:   12-block  9
call   19 never executed
    $$$$$:   12-block 10
    $$$$$:   12-block 11
    $$$$$:   12-block 12
call   20 never executed
    $$$$$:   12-block 13
    $$$$$:   12-block 14
    $$$$$:   12-block 15
call   21 never executed
    $$$$$:   12-block 16
    $$$$$:   12-block 17
    $$$$$:   12-block 18
call   22 never executed
    $$$$$:   12-block 19
    $$$$$:   12-block 20
        -:   13:
        -:   14:    // Testăm getterele
       1*:   15:    assert(m.getNrInmatriculare() == "B123XYZ");
        1:   15-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   15-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   15-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   15-block  3
call    8 never executed
        1:   15-block  4
       1*:   16:    assert(m.getProducator() == "Toyota");
        1:   16-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   16-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   16-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   16-block  3
call    8 never executed
        1:   16-block  4
       1*:   17:    assert(m.getModel() == "Corolla");
        1:   17-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   17-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   17-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   17-block  3
call    8 never executed
        1:   17-block  4
       1*:   18:    assert(m.getTip() == "Sedan");
        1:   18-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   18-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   18-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   18-block  3
call    8 never executed
        1:   18-block  4
        -:   19:
        -:   20:    // Testăm setterele
        2:   21:    m.setProducator("Honda");
        1:   21-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   21-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   21-block  2
call    6 returned 1
        1:   21-block  3
    $$$$$:   21-block  4
call    7 never executed
    $$$$$:   21-block  5
    $$$$$:   21-block  6
        2:   22:    m.setModel("Civic");
        1:   22-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   22-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   22-block  2
call    6 returned 1
        1:   22-block  3
    $$$$$:   22-block  4
call    7 never executed
    $$$$$:   22-block  5
    $$$$$:   22-block  6
        1:   23:    m.setTip("Hatchback");
        1:   23-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   23-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   23-block  2
call    6 returned 1
    $$$$$:   23-block  3
call    7 never executed
    $$$$$:   23-block  4
    $$$$$:   23-block  5
        -:   24:
       1*:   25:    assert(m.getProducator() == "Honda");
        1:   25-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   25-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   25-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   25-block  3
call    8 never executed
        1:   25-block  4
       1*:   26:    assert(m.getModel() == "Civic");
        1:   26-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   26-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   26-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   26-block  3
call    8 never executed
        1:   26-block  4
       1*:   27:    assert(m.getTip() == "Hatchback");
        1:   27-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   27-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   27-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   27-block  3
call    8 never executed
        1:   27-block  4
        -:   28:
        1:   29:    std::cout << "Test Masina passed!\n";
        1:   29-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   30:}
        1:   30-block  0
call    0 returned 1
    $$$$$:   30-block  1
call    1 never executed
        -:   31:
        -:   32:// ------------------ Test pentru Repository ------------------
        -:   33:
function _ZN5Teste14testMasinaRepoEv called 1 returned 100% blocks executed 54%
        1:   34:void Teste::testMasinaRepo() {
        1:   35:    MasinaRepo repo;
        1:   35-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   36:
        8:   37:    Masina m1("B123XYZ", "Toyota", "Corolla", "Sedan");
        1:   37-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   37-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   37-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   37-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   37-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   37-block  5
call   15 returned 1
        1:   37-block  6
call   16 returned 1
        1:   37-block  7
call   17 returned 1
        1:   37-block  8
call   18 returned 1
        1:   37-block  9
    $$$$$:   37-block 10
call   19 never executed
    $$$$$:   37-block 11
    $$$$$:   37-block 12
    $$$$$:   37-block 13
call   20 never executed
    $$$$$:   37-block 14
    $$$$$:   37-block 15
    $$$$$:   37-block 16
call   21 never executed
    $$$$$:   37-block 17
    $$$$$:   37-block 18
    $$$$$:   37-block 19
call   22 never executed
    $$$$$:   37-block 20
    $$$$$:   37-block 21
        7:   38:    Masina m2("B456ABC", "Honda", "Civic", "Hatchback");
        1:   38-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   38-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   38-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   38-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   38-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   38-block  5
call   15 returned 1
        1:   38-block  6
call   16 returned 1
        1:   38-block  7
call   17 returned 1
        1:   38-block  8
call   18 returned 1
    $$$$$:   38-block  9
call   19 never executed
    $$$$$:   38-block 10
    $$$$$:   38-block 11
    $$$$$:   38-block 12
call   20 never executed
    $$$$$:   38-block 13
    $$$$$:   38-block 14
    $$$$$:   38-block 15
call   21 never executed
    $$$$$:   38-block 16
    $$$$$:   38-block 17
    $$$$$:   38-block 18
call   22 never executed
    $$$$$:   38-block 19
    $$$$$:   38-block 20
        -:   39:
        -:   40:    // Adăugăm mașini în repo
        1:   41:    repo.adauga(m1);
        1:   41-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   42:    repo.adauga(m2);
        1:   42-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   43:
        -:   44:    // Verificăm dacă mașinile sunt adăugate corect
       1*:   45:    assert(repo.getAll().getSize() == 2);
        1:   45-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   45-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   45-block  2
call    6 never executed
        1:   45-block  3
        -:   46:
        -:   47:    // Căutăm o mașină existentă
        1:   48:    const Masina& found = repo.cauta("B123XYZ");
        1:   48-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   48-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   48-block  2
call    6 returned 1
    $$$$$:   48-block  3
call    7 never executed
    $$$$$:   48-block  4
    $$$$$:   48-block  5
       1*:   49:    assert(found.getNrInmatriculare() == "B123XYZ");
        1:   49-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   49-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   49-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:   49-block  3
call    8 never executed
        1:   49-block  4
        -:   50:
        -:   51:    // Căutăm o mașină inexistentă (ar trebui să arunce excepție)
        -:   52:    try {
       2*:   53:        auto& dump = repo.cauta("X999XXX");
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:   53-block  2
call    6 never executed
        1:   53-block  3
call    7 returned 1
        1:   53-block  4
        1:   53-block  5
    #####:   54:        assert(false && "Excepția nu a fost aruncată pentru cautarea unei mașini inexistente");
    %%%%%:   54-block  0
call    0 never executed
        1:   55:    } catch (const std::runtime_error& e) {
        1:   55-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   55-block  1
call    2 returned 1
        2:   56:        assert(std::string(e.what()) == "Masina inexistenta.");
        1:   56-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   56-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   56-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    $$$$$:   56-block  3
call    9 never executed
        1:   56-block  4
        1:   56-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   56-block  6
call   12 returned 1
        1:   56-block  7
branch 13 taken 1 (fallthrough)
branch 14 taken 0
    $$$$$:   56-block  8
branch 15 never executed (fallthrough)
branch 16 never executed
    $$$$$:   56-block  9
call   17 never executed
    $$$$$:   56-block 10
    $$$$$:   56-block 11
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$:   56-block 12
        1:   57:    }
        1:   57-block  0
call    0 returned 1
    $$$$$:   57-block  1
call    1 never executed
        -:   58:
        -:   59:    // Adăugăm din nou mașina m1, ceea ce ar trebui să arunce o excepție
        -:   60:    try {
        1:   61:        repo.adauga(m1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    =====:   62:        assert(false && "Excepția nu a fost aruncată pentru adăugarea unei mașini deja existente");
    $$$$$:   62-block  0
call    0 never executed
        1:   63:    } catch (const std::runtime_error& e) {
        1:   63-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   63-block  1
call    2 returned 1
        2:   64:        assert(std::string(e.what()) == "Masina deja existenta.");
        1:   64-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   64-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   64-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    $$$$$:   64-block  3
call    9 never executed
        1:   64-block  4
        1:   64-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   64-block  6
call   12 returned 1
        1:   64-block  7
branch 13 taken 1 (fallthrough)
branch 14 taken 0
    $$$$$:   64-block  8
branch 15 never executed (fallthrough)
branch 16 never executed
    $$$$$:   64-block  9
call   17 never executed
    $$$$$:   64-block 10
    $$$$$:   64-block 11
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$:   64-block 12
        1:   65:    }
        1:   65-block  0
call    0 returned 1
    $$$$$:   65-block  1
call    1 never executed
        -:   66:
        -:   67:    // Modificăm o mașină existentă
        1:   68:    m2.setProducator("Ford");
        1:   68-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   68-block  1
call    3 returned 1
        1:   68-block  2
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
    $$$$$:   68-block  3
call    7 never executed
    $$$$$:   68-block  4
    $$$$$:   68-block  5
        1:   69:    repo.modifica(m2);
        1:   69-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   70:    const Masina& modified = repo.cauta("B456ABC");
        1:   70-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   70-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   70-block  2
call    6 returned 1
    $$$$$:   70-block  3
call    7 never executed
    $$$$$:   70-block  4
    $$$$$:   70-block  5
        1:   71:    assert(modified.getProducator() == "Ford");
        1:   71-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   71-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   71-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    $$$$$:   71-block  3
call    8 never executed
        1:   71-block  4
        -:   72:
        -:   73:    // Modificăm o mașină inexistentă (ar trebui să arunce excepție)
        7:   74:    Masina m3("X999XXX", "BMW", "X5", "SUV");
        1:   74-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   74-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   74-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   74-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   74-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   74-block  5
call   15 returned 1
        1:   74-block  6
call   16 returned 1
        1:   74-block  7
call   17 returned 1
        1:   74-block  8
call   18 returned 1
    $$$$$:   74-block  9
call   19 never executed
    $$$$$:   74-block 10
    $$$$$:   74-block 11
    $$$$$:   74-block 12
call   20 never executed
    $$$$$:   74-block 13
    $$$$$:   74-block 14
    $$$$$:   74-block 15
call   21 never executed
    $$$$$:   74-block 16
    $$$$$:   74-block 17
    $$$$$:   74-block 18
call   22 never executed
    $$$$$:   74-block 19
    $$$$$:   74-block 20
        -:   75:    try {
        1:   76:        repo.modifica(m3);
        1:   76-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    =====:   77:        assert(false && "Excepția nu a fost aruncată pentru modificarea unei mașini inexistente");
    $$$$$:   77-block  0
call    0 never executed
        1:   78:    } catch (const std::runtime_error& e) {
        1:   78-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   78-block  1
call    2 returned 1
        2:   79:        assert(std::string(e.what()) == "Masina inexistenta.");
        1:   79-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   79-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   79-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    $$$$$:   79-block  3
call    9 never executed
        1:   79-block  4
        1:   79-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   79-block  6
call   12 returned 1
        1:   79-block  7
branch 13 taken 1 (fallthrough)
branch 14 taken 0
    $$$$$:   79-block  8
branch 15 never executed (fallthrough)
branch 16 never executed
    $$$$$:   79-block  9
call   17 never executed
    $$$$$:   79-block 10
    $$$$$:   79-block 11
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$:   79-block 12
        1:   80:    }
        1:   80-block  0
call    0 returned 1
    $$$$$:   80-block  1
call    1 never executed
        -:   81:
        -:   82:    // Ștergem o mașină existentă
        1:   83:    repo.sterge("B123XYZ");
        1:   83-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   83-block  1
call    3 returned 1
        1:   83-block  2
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
    $$$$$:   83-block  3
call    7 never executed
    $$$$$:   83-block  4
    $$$$$:   83-block  5
        1:   84:    assert(repo.getAll().getSize() == 1);
        1:   84-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   84-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:   84-block  2
call    6 never executed
        1:   84-block  3
        -:   85:
        -:   86:    // Ștergem o mașină inexistentă (ar trebui să arunce excepție)
        -:   87:    try {
        2:   88:        repo.sterge("B123XYZ");
        1:   88-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   88-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    $$$$$:   88-block  2
call    6 never executed
        1:   88-block  3
call    7 returned 1
        1:   88-block  4
        1:   88-block  5
    =====:   89:        assert(false && "Excepția nu a fost aruncată pentru ștergerea unei mașini inexistente");
    $$$$$:   89-block  0
call    0 never executed
        1:   90:    } catch (const std::runtime_error& e) {
        1:   90-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   90-block  1
call    2 returned 1
        2:   91:        assert(std::string(e.what()) == "Masina inexistenta.");
        1:   91-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   91-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   91-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    $$$$$:   91-block  3
call    9 never executed
        1:   91-block  4
        1:   91-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   91-block  6
call   12 returned 1
        1:   91-block  7
branch 13 taken 1 (fallthrough)
branch 14 taken 0
    $$$$$:   91-block  8
branch 15 never executed (fallthrough)
branch 16 never executed
    $$$$$:   91-block  9
call   17 never executed
    $$$$$:   91-block 10
    $$$$$:   91-block 11
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$:   91-block 12
        1:   92:    }
        1:   92-block  0
call    0 returned 1
    $$$$$:   92-block  1
call    1 never executed
        -:   93:
        1:   94:    std::cout << "Test MasinaRepo passed!\n";
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   95:}
        1:   95-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:   95-block  1
call    4 never executed
    $$$$$:   95-block  2
call    5 never executed
    $$$$$:   95-block  3
call    6 never executed
    $$$$$:   95-block  4
call    7 never executed
        -:   96:
        -:   97:// ------------------ Test pentru Service ------------------
        -:   98:
function _ZN5Teste17testMasinaServiceEv called 1 returned 100% blocks executed 57%
        1:   99:void Teste::testMasinaService() {
        1:  100:    MasinaRepo repo;
        1:  100-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  101:    MasinaService service(repo);
        1:  101-block  0
call    0 returned 1
        -:  102:
        8:  103:    Masina m1("B123XYZ", "Toyota", "Corolla", "Sedan");
        1:  103-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  103-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  103-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  103-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  103-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  103-block  5
call   15 returned 1
        1:  103-block  6
call   16 returned 1
        1:  103-block  7
call   17 returned 1
        1:  103-block  8
call   18 returned 1
        1:  103-block  9
    $$$$$:  103-block 10
call   19 never executed
    $$$$$:  103-block 11
    $$$$$:  103-block 12
    $$$$$:  103-block 13
call   20 never executed
    $$$$$:  103-block 14
    $$$$$:  103-block 15
    $$$$$:  103-block 16
call   21 never executed
    $$$$$:  103-block 17
    $$$$$:  103-block 18
    $$$$$:  103-block 19
call   22 never executed
    $$$$$:  103-block 20
    $$$$$:  103-block 21
        8:  104:    Masina m2("B456ABC", "Honda", "Civic", "Hatchback");
        1:  104-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  104-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  104-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  104-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  104-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  104-block  5
call   15 returned 1
        1:  104-block  6
call   16 returned 1
        1:  104-block  7
call   17 returned 1
        1:  104-block  8
call   18 returned 1
        1:  104-block  9
    $$$$$:  104-block 10
call   19 never executed
    $$$$$:  104-block 11
    $$$$$:  104-block 12
    $$$$$:  104-block 13
call   20 never executed
    $$$$$:  104-block 14
    $$$$$:  104-block 15
    $$$$$:  104-block 16
call   21 never executed
    $$$$$:  104-block 17
    $$$$$:  104-block 18
    $$$$$:  104-block 19
call   22 never executed
    $$$$$:  104-block 20
    $$$$$:  104-block 21
        -:  105:
        -:  106:    // Adăugăm mașini
        8:  107:    service.adaugaMasina("B123XYZ", "Toyota", "Corolla", "Sedan");
        1:  107-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  107-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  107-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  107-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  107-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  107-block  5
call   15 returned 1
        1:  107-block  6
call   16 returned 1
        1:  107-block  7
call   17 returned 1
        1:  107-block  8
call   18 returned 1
        1:  107-block  9
    $$$$$:  107-block 10
call   19 never executed
    $$$$$:  107-block 11
    $$$$$:  107-block 12
    $$$$$:  107-block 13
call   20 never executed
    $$$$$:  107-block 14
    $$$$$:  107-block 15
    $$$$$:  107-block 16
call   21 never executed
    $$$$$:  107-block 17
    $$$$$:  107-block 18
    $$$$$:  107-block 19
call   22 never executed
    $$$$$:  107-block 20
    $$$$$:  107-block 21
        8:  108:    service.adaugaMasina("B456ABC", "Honda", "Civic", "Hatchback");
        1:  108-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  108-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  108-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  108-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  108-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  108-block  5
call   15 returned 1
        1:  108-block  6
call   16 returned 1
        1:  108-block  7
call   17 returned 1
        1:  108-block  8
call   18 returned 1
        1:  108-block  9
    $$$$$:  108-block 10
call   19 never executed
    $$$$$:  108-block 11
    $$$$$:  108-block 12
    $$$$$:  108-block 13
call   20 never executed
    $$$$$:  108-block 14
    $$$$$:  108-block 15
    $$$$$:  108-block 16
call   21 never executed
    $$$$$:  108-block 17
    $$$$$:  108-block 18
    $$$$$:  108-block 19
call   22 never executed
    $$$$$:  108-block 20
    $$$$$:  108-block 21
        8:  109:    service.adaugaMasina("B567DEF", "Ford", "Focus", "SUV");
        1:  109-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  109-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  109-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  109-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  109-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  109-block  5
call   15 returned 1
        1:  109-block  6
call   16 returned 1
        1:  109-block  7
call   17 returned 1
        1:  109-block  8
call   18 returned 1
        1:  109-block  9
    $$$$$:  109-block 10
call   19 never executed
    $$$$$:  109-block 11
    $$$$$:  109-block 12
    $$$$$:  109-block 13
call   20 never executed
    $$$$$:  109-block 14
    $$$$$:  109-block 15
    $$$$$:  109-block 16
call   21 never executed
    $$$$$:  109-block 17
    $$$$$:  109-block 18
    $$$$$:  109-block 19
call   22 never executed
    $$$$$:  109-block 20
    $$$$$:  109-block 21
        8:  110:    service.adaugaMasina("B678HIJ", "Bmw", "Seria5", "Coupe");
        1:  110-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  110-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  110-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  110-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  110-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  110-block  5
call   15 returned 1
        1:  110-block  6
call   16 returned 1
        1:  110-block  7
call   17 returned 1
        1:  110-block  8
call   18 returned 1
        1:  110-block  9
    $$$$$:  110-block 10
call   19 never executed
    $$$$$:  110-block 11
    $$$$$:  110-block 12
    $$$$$:  110-block 13
call   20 never executed
    $$$$$:  110-block 14
    $$$$$:  110-block 15
    $$$$$:  110-block 16
call   21 never executed
    $$$$$:  110-block 17
    $$$$$:  110-block 18
    $$$$$:  110-block 19
call   22 never executed
    $$$$$:  110-block 20
    $$$$$:  110-block 21
        7:  111:    service.adaugaMasina("B899KLM", "Dacia", "Papuc", "Pickup");
        1:  111-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  111-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  111-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  111-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  111-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  111-block  5
call   15 returned 1
        1:  111-block  6
call   16 returned 1
        1:  111-block  7
call   17 returned 1
        1:  111-block  8
call   18 returned 1
    $$$$$:  111-block  9
call   19 never executed
    $$$$$:  111-block 10
    $$$$$:  111-block 11
    $$$$$:  111-block 12
call   20 never executed
    $$$$$:  111-block 13
    $$$$$:  111-block 14
    $$$$$:  111-block 15
call   21 never executed
    $$$$$:  111-block 16
    $$$$$:  111-block 17
    $$$$$:  111-block 18
call   22 never executed
    $$$$$:  111-block 19
    $$$$$:  111-block 20
        -:  112:
        -:  113:    // Verificăm dacă mașinile sunt adăugate corect
       1*:  114:    assert(service.getAllMasini().getSize() == 5);
        1:  114-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  114-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:  114-block  2
call    6 never executed
        1:  114-block  3
        -:  115:
        -:  116:    // Căutăm mașina
        1:  117:    const Masina& found = service.cautaMasina("B123XYZ");
        1:  117-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  117-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  117-block  2
call    6 returned 1
    $$$$$:  117-block  3
call    7 never executed
    $$$$$:  117-block  4
    $$$$$:  117-block  5
       1*:  118:    assert(found.getNrInmatriculare() == "B123XYZ");
        1:  118-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  118-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  118-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:  118-block  3
call    8 never executed
        1:  118-block  4
        -:  119:
        -:  120:    // Modificăm o mașină
        8:  121:    service.modificaMasina("B456ABC", "Ford", "Focus", "Sedan");
        1:  121-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  121-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  121-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  121-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  121-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  121-block  5
call   15 returned 1
        1:  121-block  6
call   16 returned 1
        1:  121-block  7
call   17 returned 1
        1:  121-block  8
call   18 returned 1
        1:  121-block  9
    $$$$$:  121-block 10
call   19 never executed
    $$$$$:  121-block 11
    $$$$$:  121-block 12
    $$$$$:  121-block 13
call   20 never executed
    $$$$$:  121-block 14
    $$$$$:  121-block 15
    $$$$$:  121-block 16
call   21 never executed
    $$$$$:  121-block 17
    $$$$$:  121-block 18
    $$$$$:  121-block 19
call   22 never executed
    $$$$$:  121-block 20
    $$$$$:  121-block 21
        1:  122:    const Masina& modified = service.cautaMasina("B456ABC");
        1:  122-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  122-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  122-block  2
call    6 returned 1
    $$$$$:  122-block  3
call    7 never executed
    $$$$$:  122-block  4
    $$$$$:  122-block  5
       1*:  123:    assert(modified.getProducator() == "Ford");
        1:  123-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  123-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  123-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:  123-block  3
call    8 never executed
        1:  123-block  4
        -:  124:
        -:  125:    // Ștergem o mașină
        1:  126:    service.stergeMasina("B123XYZ");
        1:  126-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  126-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  126-block  2
call    6 returned 1
    $$$$$:  126-block  3
call    7 never executed
    $$$$$:  126-block  4
    $$$$$:  126-block  5
       1*:  127:    assert(service.getAllMasini().getSize() == 4);
        1:  127-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  127-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:  127-block  2
call    6 never executed
        1:  127-block  3
        -:  128:
        -:  129:    //filtrare
        1:  130:    List m = service.getFilteredMasiniByProducator("Ford");
        1:  130-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  130-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  130-block  2
call    6 returned 1
    $$$$$:  130-block  3
call    7 never executed
    $$$$$:  130-block  4
    $$$$$:  130-block  5
       1*:  131:    assert(m.getSize() == 2);
        1:  131-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  131-block  1
call    3 never executed
        1:  131-block  2
        1:  132:    IteratorList<Masina> it = m.begin();
        1:  132-block  0
call    0 returned 1
       1*:  133:    assert(it.element().getNrInmatriculare() == "B456ABC");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  133-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  133-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  133-block  2
call    9 never executed
        1:  133-block  3
        1:  134:    ++it;
        1:  134-block  0
call    0 returned 1
       1*:  135:    assert(it.element().getNrInmatriculare() == "B567DEF");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  135-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  135-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  135-block  2
call    9 never executed
        1:  135-block  3
        -:  136:
        1:  137:    m = service.getFilteredMasiniByTip("Coupe");
        1:  137-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  137-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  137-block  2
call    6 returned 1
call    7 returned 1
call    8 returned 1
    $$$$$:  137-block  3
call    9 never executed
    $$$$$:  137-block  4
    $$$$$:  137-block  5
    $$$$$:  137-block  6
       1*:  138:    assert(m.getSize() == 1);
        1:  138-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  138-block  1
call    3 never executed
        1:  138-block  2
        1:  139:    it.prim();
        1:  139-block  0
call    0 returned 1
       1*:  140:    assert(it.element().getNrInmatriculare() == "B678HIJ");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  140-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  140-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  140-block  2
call    9 never executed
        1:  140-block  3
        -:  141:
        -:  142:
        -:  143:    //sortare
        1:  144:    m = service.sorteazaMasiniNrInmatriculare();
        1:  144-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  144-block  1
call    3 returned 1
call    4 returned 1
    $$$$$:  144-block  2
       1*:  145:    assert(m.getSize() == 4);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  145-block  0
call    3 never executed
        1:  145-block  1
        1:  146:    it.prim();
        1:  146-block  0
call    0 returned 1
       1*:  147:    assert((*it).getNrInmatriculare() == "B456ABC");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  147-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  147-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  147-block  2
call    9 never executed
        1:  147-block  3
        1:  148:    ++it;
        1:  148-block  0
call    0 returned 1
       1*:  149:    assert((*it).getNrInmatriculare() == "B567DEF");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  149-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  149-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  149-block  2
call    9 never executed
        1:  149-block  3
        1:  150:    ++it;
        1:  150-block  0
call    0 returned 1
       1*:  151:    assert((*it).getNrInmatriculare() == "B678HIJ");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  151-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  151-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  151-block  2
call    9 never executed
        1:  151-block  3
        1:  152:    ++it;
        1:  152-block  0
call    0 returned 1
       1*:  153:    assert((*it).getNrInmatriculare() == "B899KLM");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  153-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  153-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  153-block  2
call    9 never executed
        1:  153-block  3
        -:  154:
        1:  155:    m = service.sorteazaMasiniTip();
        1:  155-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  155-block  1
call    3 returned 1
call    4 returned 1
    $$$$$:  155-block  2
       1*:  156:    assert(m.getSize() == 4);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  156-block  0
call    3 never executed
        1:  156-block  1
        1:  157:    it.prim();
        1:  157-block  0
call    0 returned 1
       1*:  158:    assert((*it).getNrInmatriculare() == "B678HIJ");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  158-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  158-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  158-block  2
call    9 never executed
        1:  158-block  3
        1:  159:    ++it;
        1:  159-block  0
call    0 returned 1
       1*:  160:    assert((*it).getNrInmatriculare() == "B899KLM");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  160-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  160-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  160-block  2
call    9 never executed
        1:  160-block  3
        1:  161:    ++it;
        1:  161-block  0
call    0 returned 1
       1*:  162:    assert((*it).getNrInmatriculare() == "B567DEF");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  162-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  162-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  162-block  2
call    9 never executed
        1:  162-block  3
        1:  163:    ++it;
        1:  163-block  0
call    0 returned 1
       1*:  164:    assert((*it).getNrInmatriculare() == "B456ABC");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  164-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  164-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  164-block  2
call    9 never executed
        1:  164-block  3
        -:  165:
        1:  166:    m = service.sorteazaMasiniProducatorModel();
        1:  166-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  166-block  1
call    3 returned 1
call    4 returned 1
    $$$$$:  166-block  2
       1*:  167:    assert(m.getSize() == 4);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  167-block  0
call    3 never executed
        1:  167-block  1
        1:  168:    it.prim();
        1:  168-block  0
call    0 returned 1
       1*:  169:    assert((*it).getNrInmatriculare() == "B678HIJ");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  169-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  169-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  169-block  2
call    9 never executed
        1:  169-block  3
        1:  170:    ++it;
        1:  170-block  0
call    0 returned 1
       1*:  171:    assert((*it).getNrInmatriculare() == "B899KLM");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  171-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  171-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  171-block  2
call    9 never executed
        1:  171-block  3
        1:  172:    ++it;
        1:  172-block  0
call    0 returned 1
       1*:  173:    assert((*it).getNrInmatriculare() == "B567DEF");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  173-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  173-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  173-block  2
call    9 never executed
        1:  173-block  3
        1:  174:    ++it;
        1:  174-block  0
call    0 returned 1
       1*:  175:    assert((*it).getNrInmatriculare() == "B456ABC");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  175-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  175-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  175-block  2
call    9 never executed
        1:  175-block  3
        -:  176:
        1:  177:    std::cout << "Test MasinaService passed!\n";
        1:  177-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  178:}
        1:  178-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:  178-block  1
call    4 never executed
    $$$$$:  178-block  2
call    5 never executed
    $$$$$:  178-block  3
call    6 never executed
    $$$$$:  178-block  4
call    7 never executed
        -:  179:template <typename MyVector>
function _Z15testCopyIterateI4ListI6MasinaEET_S3_ called 1 returned 100% blocks executed 57%
        1:  180:MyVector testCopyIterate(MyVector v) {
      101:  181:    for (auto& el : v) {
        1:  181-block  0
call    0 returned 1
call    1 returned 1
      100:  181-block  1
call    2 returned 100
      100:  181-block  2
call    3 returned 100
call    4 returned 100
      101:  181-block  3
call    5 returned 101
branch  6 taken 101 (fallthrough)
branch  7 taken 0 (throw)
      101:  181-block  4
branch  8 taken 100
branch  9 taken 1 (fallthrough)
      100:  182:        std::string concat = el.getNrInmatriculare() + el.getProducator();
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:  182-block  0
call    3 returned 100
branch  4 taken 100 (fallthrough)
branch  5 taken 0 (throw)
      100:  182-block  1
call    6 returned 100
branch  7 taken 100 (fallthrough)
branch  8 taken 0 (throw)
        -:  183:        (void)concat;
        -:  184:    }
        7:  185:    Masina m{ "XX00YYY", "Total", "Concat", "Test" };
        1:  185-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  185-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  185-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  185-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  185-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  185-block  5
call   15 returned 1
        1:  185-block  6
call   16 returned 1
        1:  185-block  7
call   17 returned 1
        1:  185-block  8
call   18 returned 1
    $$$$$:  185-block  9
call   19 never executed
    $$$$$:  185-block 10
    $$$$$:  185-block 11
    $$$$$:  185-block 12
call   20 never executed
    $$$$$:  185-block 13
    $$$$$:  185-block 14
    $$$$$:  185-block 15
call   21 never executed
    $$$$$:  185-block 16
    $$$$$:  185-block 17
    $$$$$:  185-block 18
call   22 never executed
    $$$$$:  185-block 19
    $$$$$:  185-block 20
        1:  186:    v.add(m);
        1:  186-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        2:  187:    return v;
        1:  187-block  0
call    0 returned 1
        1:  187-block  1
        1:  188:}
call    0 returned 1
    $$$$$:  188-block  0
call    1 never executed
        -:  189:
        -:  190:template <typename MyVector>
function _Z9addMasiniI4ListI6MasinaEEvRT_i called 2 returned 100% blocks executed 47%
        2:  191:void addMasini(MyVector& v, int cate) {
      152:  192:    for (int i = 0; i < cate; i++) {
        2:  192-block  0
      150:  192-block  1
call    0 returned 150
      152:  192-block  2
branch  1 taken 150
branch  2 taken 2 (fallthrough)
    $$$$$:  192-block  3
call    3 never executed
      150:  193:        Masina m{
      150:  193-block  0
call    0 returned 150
call    1 returned 150
branch  2 taken 150 (fallthrough)
branch  3 taken 0 (throw)
      150:  193-block  1
call    4 returned 150
branch  5 taken 150 (fallthrough)
branch  6 taken 0 (throw)
      150:  193-block  2
call    7 returned 150
call    8 returned 150
branch  9 taken 150 (fallthrough)
branch 10 taken 0 (throw)
      150:  193-block  3
call   11 returned 150
call   12 returned 150
branch 13 taken 150 (fallthrough)
branch 14 taken 0 (throw)
      150:  193-block  4
call   15 returned 150
call   16 returned 150
branch 17 taken 150 (fallthrough)
branch 18 taken 0 (throw)
      150:  193-block  5
call   19 returned 150
branch 20 taken 150 (fallthrough)
branch 21 taken 0 (throw)
      150:  193-block  6
call   22 returned 150
call   23 returned 150
call   24 returned 150
call   25 returned 150
call   26 returned 150
call   27 returned 150
call   28 returned 150
call   29 returned 150
call   30 returned 150
    $$$$$:  193-block  7
call   31 never executed
    $$$$$:  193-block  8
call   32 never executed
    $$$$$:  193-block  9
    $$$$$:  193-block 10
    $$$$$:  193-block 11
call   33 never executed
    $$$$$:  193-block 12
call   34 never executed
    $$$$$:  193-block 13
    $$$$$:  193-block 14
    $$$$$:  193-block 15
call   35 never executed
    $$$$$:  193-block 16
call   36 never executed
    $$$$$:  193-block 17
    $$$$$:  193-block 18
    $$$$$:  193-block 19
call   37 never executed
    $$$$$:  193-block 20
call   38 never executed
    $$$$$:  193-block 21
call   39 never executed
    $$$$$:  193-block 22
    $$$$$:  193-block 23
    $$$$$:  193-block 24
        -:  194:            "B" + std::to_string(i) + "XYZ",
        -:  195:            "Prod" + std::to_string(i),
        -:  196:            "Model" + std::to_string(i),
        -:  197:            "Tip" + std::to_string(i)
        -:  198:        };
      150:  199:        v.add(m);
call    0 returned 150
branch  1 taken 150 (fallthrough)
branch  2 taken 0 (throw)
        -:  200:    }
        2:  201:}
        2:  201-block  0
        -:  202:
        -:  203:template <typename MyVector>
function _Z20testCreateCopyAssignI4ListI6MasinaEEvv called 1 returned 100% blocks executed 71%
        1:  204:void testCreateCopyAssign() {
        1:  205:    MyVector v; // default constructor
        1:  205-block  0
call    0 returned 1
        1:  206:    addMasini(v, 100);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  207:    assert(v.getSize() == 100);
        1:  207-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  207-block  1
call    3 never executed
        1:  207-block  2
       1*:  208:    assert(v.get(50).getProducator() == "Prod50");
        1:  208-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  208-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  208-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  208-block  3
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  208-block  4
call   11 never executed
        1:  208-block  5
        -:  209:
        1:  210:    MyVector v2{ v }; // copy constructor
        1:  210-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  211:    assert(v2.getSize() == 100);
        1:  211-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  211-block  1
call    3 never executed
        1:  211-block  2
       1*:  212:    assert(v2.get(50).getProducator() == "Prod50");
        1:  212-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  212-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  212-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  212-block  3
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  212-block  4
call   11 never executed
        1:  212-block  5
        -:  213:
        1:  214:    MyVector v3; // default constructor
        1:  214-block  0
call    0 returned 1
        1:  215:    v3 = v; // assignment
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  216:    assert(v3.getSize() == 100);
        1:  216-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  216-block  1
call    3 never executed
        1:  216-block  2
       1*:  217:    assert(v3.get(50).getProducator() == "Prod50");
        1:  217-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  217-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  217-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  217-block  3
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  217-block  4
call   11 never executed
        1:  217-block  5
        -:  218:
        1:  219:    auto v4 = testCopyIterate(v3);
        1:  219-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  219-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  219-block  2
call    6 returned 1
    $$$$$:  219-block  3
call    7 never executed
    $$$$$:  219-block  4
       1*:  220:    assert(v4.getSize() == 101);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  220-block  0
call    3 never executed
        1:  220-block  1
       1*:  221:    assert(v4.get(50).getProducator() == "Prod50");
        1:  221-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  221-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  221-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  221-block  3
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  221-block  4
call   11 never executed
        1:  221-block  5
        -:  222:
        1:  223:    std::cout << "Test copy, assignment, and iteration passed.\n";
        1:  223-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  224:}
        1:  224-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:  224-block  1
call    4 never executed
    $$$$$:  224-block  2
call    5 never executed
    $$$$$:  224-block  3
call    6 never executed
    $$$$$:  224-block  4
call    7 never executed
        -:  225:
        -:  226:template <typename MyVector>
function _Z23testMoveConstrAssgnmentI4ListI6MasinaEEvv called 1 returned 100% blocks executed 63%
        1:  227:void testMoveConstrAssgnment() {
        1:  228:    std::vector<MyVector> v;
        1:  229:    v.push_back(MyVector{});
        1:  229-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  229-block  1
call    4 returned 1
    $$$$$:  229-block  2
call    5 never executed
    $$$$$:  229-block  3
        1:  230:    v.insert(v.begin(), MyVector{});
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  230-block  0
call    6 returned 1
    $$$$$:  230-block  1
    $$$$$:  230-block  2
    $$$$$:  230-block  3
call    7 never executed
    $$$$$:  230-block  4
        -:  231:
       1*:  232:    assert(v.size() == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  232-block  0
call    3 never executed
        1:  232-block  1
        -:  233:
        1:  234:    MyVector v2;
        1:  234-block  0
call    0 returned 1
        1:  235:    addMasini(v2, 50);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  236:    v2 = MyVector{}; // move assignment
        1:  236-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
       1*:  237:    assert(v2.getSize() == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  237-block  0
call    3 never executed
        1:  237-block  1
        -:  238:
        1:  239:    std::cout << "Test move constructor and assignment passed.\n";
        1:  239-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  240:}
        1:  240-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  240-block  1
call    2 never executed
    $$$$$:  240-block  2
call    3 never executed
        -:  241:// ------------------ Funcție principală pentru a rula testele ------------------
        -:  242:
function _ZN5Teste8runTestsEv called 1 returned 100% blocks executed 100%
        1:  243:void Teste::runTests() {
        1:  244:    testCreateCopyAssign<List<Masina>>();
        1:  244-block  0
call    0 returned 1
        1:  245:    testMoveConstrAssgnment<List<Masina>>();
call    0 returned 1
        1:  246:    testMasina();
call    0 returned 1
        1:  247:    testMasinaRepo();
call    0 returned 1
        1:  248:    testMasinaService();
call    0 returned 1
        1:  249:    std::cout << "Toate testele au trecut cu succes!\n";
call    0 returned 1
        1:  250:}
